
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class GastoDAO { 

    public List<Gasto> listarPorUsuario(int usuarioId) {
        List<Gasto> gastos = new ArrayList<>();
        String sql = "SELECT * FROM gastos WHERE usuario_id = ?";
        try (Connection conn = ConexaoDB.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, usuarioId);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                Gasto gasto = new Gasto();
                gasto.setId(rs.getInt("id"));
                gasto.setUsuarioId(rs.getInt("usuario_id"));
                gasto.setDescricao(rs.getString("descricao"));
                gasto.setValor(rs.getDouble("valor"));
                gastos.add(gasto);
            }
        } catch (SQLException e) {
            System.err.println("Erro ao listar gastos: " + e.getMessage());
        }
        return gastos;
    }

    public boolean adicionar(Gasto gasto) {
        String sql = "INSERT INTO gastos (usuario_id, descricao, valor) VALUES (?, ?, ?)";
        try (Connection conn = ConexaoDB.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {

            stmt.setInt(1, gasto.getUsuarioId());
            stmt.setString(2, gasto.getDescricao());
            stmt.setDouble(3, gasto.getValor());

            int linhas = stmt.executeUpdate();
            if (linhas > 0) {
                ResultSet rs = stmt.getGeneratedKeys();
                if (rs.next()) {
                    gasto.setId(rs.getInt(1));
                }
                return true;
            }
            return false;

        } catch (SQLException e) {
            System.err.println("Erro ao adicionar gasto: " + e.getMessage());
            return false;
        }
    }

    public boolean remover(int id) {
        String sql = "DELETE FROM gastos WHERE id = ?";
        try (Connection conn = ConexaoDB.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            int linhas = stmt.executeUpdate();
            return linhas > 0;

        } catch (SQLException e) {
            System.err.println("Erro ao remover gasto: " + e.getMessage());
            return false;
        }
    }

    public boolean atualizar(Gasto gasto) {
        String sql = "UPDATE gastos SET descricao = ?, valor = ? WHERE id = ?";
        try (Connection conn = ConexaoDB.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, gasto.getDescricao());
            stmt.setDouble(2, gasto.getValor());
            stmt.setInt(3, gasto.getId());

            int linhas = stmt.executeUpdate();
            return linhas > 0;

        } catch (SQLException e) {
            System.err.println("Erro ao atualizar gasto: " + e.getMessage());
            return false;
        }
    }
}
